# Asks the user for their height and weight, calculates their BMI, and outputs their
# BMI and weight class (underweight, normal weight, overweight, obese)

.data
nameMsg:           .asciiz "What is your name? "
heightMsg:         .asciiz "Please enter your height in inches: "
weightMsg:         .asciiz "Now enter your weight in pounds (round to a whole number): "
bmiMsg:            .asciiz ", your BMI is: "
name: 	           .space  20
bmi:	           .float  0.0
bmiVals:           .float  18.5, 25, 30
bmiWeightClassMsg: .asciiz "\nThis is considered "
bmiWeightClasses:  .asciiz "underweight.   ", "normal weight. ", "overweight.    ", "obese.         "

.text
main:
	#MIDI out synchronous call
	li $v0 33
	li $a0 52
	li $a1 20
	li $a2 22
	li $a3 127
	syscall
	
	#Prompts the user to enter their name
	la $a0 nameMsg
	li $v0 4
	syscall
	
	#Stores the user's name
	li $v0 8
	la $a0 name
	syscall
	
	#Removes newline character from name input (I know it wasn't required, but wanted to learn how to do it)
	li $t0 -1
index:
	addi $t0 $t0 1
	lb $t1 name($t0)
	bne $t1 0xA index
	sb $zero name($t0)
	
	#Prompt the user to enter their height
	la $a0 heightMsg
	li $v0 4
	syscall
	
	#Stores the user's height into the $s1 register
	li $v0 5
	syscall
	move $s0 $v0
	
	#Prompt the user to enter their weight
	la $a0 weightMsg
	li $v0 4
	syscall
	
	#Stores the user's weight into the $s0 register
	li $v0 5
	syscall
	move $s1 $v0
	
	#Multiplies the weight by 703
	mul $s1 $s1 703
	
	#Squares the height
	mul $s0 $s0 $s0
	
	#Divides the weight by the height after converting them to floating point values
	mtc1 $s0 $f20
	cvt.s.w $f20 $f20
	mtc1 $s1 $f21
	cvt.s.w $f21 $f21
	div.s $f12 $f21 $f20
	
	#Outputs name and BMI
	la $a0 name
	li $v0 4
	syscall
	la $a0 bmiMsg
	syscall
	li $v0 2
	syscall
	
	#Deteremines what weight class the BMI indicates
	li $t0 -4
	la $t1 bmiVals
status:
	addi $t0 $t0 4
	add $t2 $t1 $t0
	l.s $f22 ($t2)
	c.le.s $f12 $f22
	bc1f status
	
	#Outpucts weight class
	li $v0 4
	la $a0 bmiWeightClassMsg
	syscall
	
	#Iterates through the array based on the weight class determined by the BMI
	la $t1 bmiWeightClasses
	sll $t0 $t0 2
	add $t2 $t1 $t0
	la $a0 ($t2)
	syscall
exit:
	li $v0, 10
	syscall
